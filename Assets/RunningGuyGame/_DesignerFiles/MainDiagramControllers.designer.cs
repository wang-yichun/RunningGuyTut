// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using UniRx;
using UnityEngine;


public abstract class CharacterControllerBase : Controller {
    
    [Inject] public LevelRootController LevelRootController {get;set;}
    public abstract void InitializeCharacter(CharacterViewModel character);
    
    public override ViewModel CreateEmpty() {
        return new CharacterViewModel(this);
    }
    
    public virtual CharacterViewModel CreateCharacter() {
        return ((CharacterViewModel)(this.Create()));
    }
    
    public override void Initialize(ViewModel viewModel) {
        this.InitializeCharacter(((CharacterViewModel)(viewModel)));
    }
    
    public virtual void PickUpCoin(CharacterViewModel character) {
    }
}

public abstract class CoinControllerBase : Controller {
    
    [Inject] public LevelRootController LevelRootController {get;set;}
    public abstract void InitializeCoin(CoinViewModel coin);
    
    public override ViewModel CreateEmpty() {
        return new CoinViewModel(this);
    }
    
    public virtual CoinViewModel CreateCoin() {
        return ((CoinViewModel)(this.Create()));
    }
    
    public override void Initialize(ViewModel viewModel) {
        this.InitializeCoin(((CoinViewModel)(viewModel)));
    }
    
    public virtual void PickUp(CoinViewModel coin) {
    }
}

public abstract class LevelRootControllerBase : Controller {
    
    [Inject] public CharacterController CharacterController {get;set;}
    [Inject] public CoinController CoinController {get;set;}
    public abstract void InitializeLevelRoot(LevelRootViewModel levelRoot);
    
    public override ViewModel CreateEmpty() {
        return new LevelRootViewModel(this);
    }
    
    public virtual LevelRootViewModel CreateLevelRoot() {
        return ((LevelRootViewModel)(this.Create()));
    }
    
    public override void Initialize(ViewModel viewModel) {
        this.InitializeLevelRoot(((LevelRootViewModel)(viewModel)));
    }
}
